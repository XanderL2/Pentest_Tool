import nmap, re; 

def escaneo_detallado(ip, netmask):
    
    # Obtenemos la longitud de mascara de red
    len_netmask = len(re.findall(r"\d{3}", netmask))
    
    
    # Validamos la Mascara en notacion CDIR (La notacion con Slashes)
    if len_netmask == 1:
        netmask = "/8"
    elif len_netmask == 2:
        netmask = "/16"
    elif len_netmask == 3:
        netmask = "/24"
    
    # Instanciamos un objeto a partir del modulo nmap
    nm = nmap.PortScanner()

    # Definimos el comando de nmap requerido para el escaneo
    """ command = f"sudo nmap -F -O --osscan-guess -sV --version-intensity 4 --min-parallelism 100 --max-parallelism 200 --min-rate 500 --max-rate 2000 --script=default {ip}{netmask}" """
    
    command = f"sudo nmap -F -O --osscan-guess -sV --version-intensity 3 --min-parallelism 50 --max-parallelism 100 --min-rate 100 --max-rate 500 --script=default {ip}{netmask}"

    
    
    
    

    # Lanzamos el escaneo
    nm.scan(arguments=command, sudo=True)

    hosts = nm.all_hosts()  # Devuelve una lista con la IP de los hosts encontrados

    #Definimos un diccionario a retornar
    dispositivos = []

    #Ejecutamos un bucle para iterar sobre los hosts y sus propiedades
    for i in range(len(hosts)):

        diccionario = {}
        diccionario.update({"IP": hosts[i], "Estado": nm[hosts[i]].state()})  #IP y el Estado

        #Validamos, si el sistema es la clave osmatch es encontrado retornamos.
        if len(nm[hosts[i]]['osmatch']) == 0: 
            diccionario.update({"Sistema Operativo": "No encontrado"}) 
        else:
            diccionario.update({"Sistema Operativo": nm[hosts[i]]['osmatch'][0]['name'], "Precisi√≥n": nm[hosts[i]]['osmatch'][0]['accuracy']})
    
        #Buscamos direcciones encontradas en la Red, como Mac IPV4, Etc.
        diccionario.update({"Direcciones Encontradas": nm[hosts[i]]["addresses"]})
    
        #Buscamos el fabricante del dispositivo:
        diccionario.update({"Fabricante del dispositivo": nm[hosts[i]].get('vendor', 'No encontrado')})
    
        #Tratamos de buscar el nombre asociado para un posible ataque de fuerza bruta
        if 'hostnames' in nm[hosts[i]]:
            diccionario.update({"Nombre Asociado": nm[hosts[i]]['hostnames']})

        dispositivos.append(diccionario)

    return dispositivos; 



