import nmap, re; 



def DetailedScan(ip, netmask):

    # Instanciamos un objeto a partir del módulo nmap
    nm = nmap.PortScanner()

    # Construimos el rango de red completo
    network = f"{ip}{netmask}"


    # Realizamos el escaneo
    nm.scan(hosts=network, arguments='-F -T4 --max-retries 1 --host-timeout 1000')



    # Obtenemos todos los hosts escaneados
    hosts = nm.all_hosts()
    devices = []



    for host in hosts:
        deviceInfo = {
            "IP": host,
            "Estado": nm[host].state()
        }

        # Validamos si la clave 'osmatch' está presente
        if 'osmatch' in nm[host] and len(nm[host]['osmatch']) > 0:
            deviceInfo.update({
                "Sistema Operativo": nm[host]['osmatch'][0]['name'],
                "Precisión": nm[host]['osmatch'][0]['accuracy']
            })
        else:
            deviceInfo.update({"Sistema Operativo": "No encontrado"})


        # Buscamos direcciones encontradas en la Red, como MAC, IPv4, etc.
        deviceInfo.update({"Direcciones Encontradas": nm[host]["addresses"]})


        # Buscamos el fabricante del dispositivo
        deviceInfo.update({"Fabricante del dispositivo": nm[host].get('vendor', 'No encontrado')})


        # Tratamos de buscar el nombre asociado para un posible ataque de fuerza bruta
        if 'hostnames' in nm[host] and len(nm[host]['hostnames']) > 0:
            deviceInfo.update({"Nombre Asociado": nm[host]['hostnames']})

        else:
            deviceInfo.update({"Nombre Asociado": "No encontrado"})

        devices.append(deviceInfo)

    return devices
