import nmap, re; 

def DetailedScan(ip, netmask):
    
   
    # Instanciamos un objeto a partir del modulo nmap
    nm = nmap.PortScanner();


    # Definimos el comando de nmap requerido para el escaneo
    command = f"sudo nmap -p- -sS --min-rate 5000 --open -vvv -n -Pn  {ip}{netmask}";

    


    nm.scan(arguments=command, sudo=True);
    hosts = nm.all_hosts(); 
    

    devices = []



    for i in range(len(hosts)):


        deviceInfo= {}
        deviceInfo.update({"IP": hosts[i], "Estado": nm[hosts[i]].state()})  #IP y el Estado


        #Validamos, si el sistema es la clave osmatch es encontrado retornamos.
        if len(nm[hosts[i]]['osmatch']) == 0: 
            deviceInfo.update({"Sistema Operativo": "No encontrado"}) 

        else:
            deviceInfo.update({"Sistema Operativo": nm[hosts[i]]['osmatch'][0]['name'], "Precisi√≥n": nm[hosts[i]]['osmatch'][0]['accuracy']})
    

    

        #Buscamos direcciones encontradas en la Red, como Mac IPV4, Etc.
        deviceInfo.update({"Direcciones Encontradas": nm[hosts[i]]["addresses"]})


    
        #Buscamos el fabricante del dispositivo:
        deviceInfo.update({"Fabricante del dispositivo": nm[hosts[i]].get('vendor', 'No encontrado')})
    


        #Tratamos de buscar el nombre asociado para un posible ataque de fuerza bruta

        if 'hostnames' in nm[hosts[i]]:
            deviceInfo.update({"Nombre Asociado": nm[hosts[i]]['hostnames']})



        devices.append(deviceInfo)

        print(deviceInfo)
    return devices; 

DetailedScan("102.168.1.64", "/24");