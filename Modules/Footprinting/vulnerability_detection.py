import nmap, re; 

def escanear_dispositivo(ip):
    # Instanciamos un objeto a partir del m√≥dulo nmap
    nm = nmap.PortScanner()
    
    victima = {}

    # Definimos el comando de nmap requerido para el escaneo de vulnerabilidades
    """ command = f"sudo nmap -p- --open -sV --script vuln --min-rate=5000 -n {ip}" """
    command = f"sudo nmap -p- --open -sV --script vuln --min-rate=5000 -n {ip}"

    # Lanzamos el escaneo
    nm.scan(hosts=ip, arguments=command, sudo=True)
    
    # Estado del dispositivo
    if(ip in nm._scan_result["scan"]):
        
        victima.update({"Estado de Host": nm[ip].state(), "Puertos Abiertos": nm[ip].all_tcp(), "Puertos y Versiones": [], "Vulnerabilidades": []})

        
        #Iteraremos sobre los puertos TCP
        for puerto, detalles_puerto in (nm[ip]["tcp"].items()):
            
            #Si los puertos estan abiertos los agrupamos en un objeto, por version y por puerto:
            if(detalles_puerto.get("state") == "open"):
                victima["Puertos y Versiones"].append({"Puerto": puerto, "Version": detalles_puerto.get("version")})
            
            
            
            #Obtendremos los scripts disponibles para cada puerto
            scripts = detalles_puerto.get("script")
            
            #Si ese puerto tiene la clave Script entonces
            if (scripts):
                for script_nombre, script_info in (scripts.items()):
                    #Iteraremos sobre cada cada clave y valor en el objeto script  
                    
                    if ("VULNERABLE" in script_info):
                        
                        victima["Vulnerabilidades"].append({"Puerto": puerto, "Vulnerabilidad ID": set(re.findall(r"CVE\-\d*\-\d*", script_info))})

                        
                        
        return victima; 
       
        
    else:
        return None; 













